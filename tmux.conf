# Options
# =======

# Tmux recommends using screen-256color, which supports italics
set -g default-terminal "screen-256color"

# Allow italics and truecolor for all xterm
set -as terminal-overrides ',xterm*:sitm=\E[3m:Tc'

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# Don't let programs rename the windows, I like to name them myself
setw -g allow-rename off

# Use use vi keys for copy-mode
set-window-option -g mode-keys vi

# Plugins
# =======

# tmux-sensible: https://github.com/tmux-plugins/tmux-sensible
# ------------------------------------------------------------
# utf8 is on (removed in tmux 2.2)
run-shell "tmux set-option -g utf8 on 2>/dev/null"
# enable utf8 in tmux status-left and status-right (option removed in tmux 2.2)
run-shell "tmux set-option -g status-utf8 on 2>/dev/null"

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# set only on OS X where it's required
if-shell 'test "$(uname)" = "Darwin" && command -v reattach-to-user-namespace' \
    'set-option -g default-command "reattach-to-user-namespace -l $SHELL"'

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# easier and faster switching between next/prev window
bind-key C-p previous-window
bind-key C-n next-window

# source .tmux.conf as suggested in `man tmux`
bind-key R run-shell ' \
    tmux source-file ~/.tmux.conf > /dev/null; \
    tmux display-message "Sourced .tmux.conf!"'

# select previous window with 'C-b' then 'b'
bind-key b last-window

# tmux-pain-control: https://github.com/tmux-plugins/tmux-pain-control
# --------------------------------------------------------------------
# pane navigation bindings
bind-key h   select-pane -L
bind-key C-h select-pane -L
bind-key j   select-pane -D
bind-key C-j select-pane -D
bind-key k   select-pane -U
bind-key C-k select-pane -U
bind-key l   select-pane -R
bind-key C-l select-pane -R

# window move bindings
bind-key -r "<" swap-window -t -1
bind-key -r ">" swap-window -t +1

# pane resizing bindings
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# pane split bindings
bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "\\" split-window -fh -c "#{pane_current_path}"
bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"
bind-key "%" split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# improve new window binding
bind-key "c" new-window -c "#{pane_current_path}"

# vim-tmux-navigator: https://github.com/christoomey/vim-tmux-navigator
# ---------------------------------------------------------------------
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|emacs(?:client)?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# Theme
# =====

# Minimal tmux theme
#
# This my take on a minimal tmux theme.  This follows the basic theme template
# found in the tmux-themepack project (https://github.com/jimeh/tmux-themepack).

# Status update interval
#set -g status-interval 1

# Basic status bar colors
set -g status-style bg=black,fg=cyan

# Left side of status bar
set -g status-left-style bg=black,fg=green
set -g status-left-length 40
set -g status-left "#S #[fg=white]» #[fg=yellow]#I #[fg=cyan]#P"

# Right side of status bar
set -g status-right-style bg=black,fg=cyan
set -g status-right-length 40
set -g status-right "#h #[fg=white]« #[fg=yellow]%I:%M %p #[fg=green]%d-%b-%y"

# Window status
set -g window-status-format "#[fg=blue,bg=black] #I #[fg=white,bg=black]#W#F "
set -g window-status-current-format "#[fg=colour10,bg=black,bold] #I #[fg=colour15,bg=black,bold]#W#F "

# Current window status
set -g window-status-current-style bg=red,fg=black

# Window with activity status
set -g window-status-activity-style bg=black,fg=yellow

# Window separator
set -g window-status-separator ""

# Window status alignment
set -g status-justify centre

# Pane border
set -g pane-border-style bg=default,fg=default

# Active pane border
set -g pane-active-border-style bg=default,fg=green

# Pane number indicator
set -g display-panes-colour default
set -g display-panes-active-colour default

# Clock mode
set -g clock-mode-colour red
set -g clock-mode-style 24

# Message
set -g message-style bg=default,fg=default

# Command message
set -g message-command-style bg=default,fg=default

# Mode
set -g mode-style bg=red,fg=default

# Local config
# ============
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'
